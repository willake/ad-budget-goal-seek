@rendermode InteractiveServer
@inject BudgetOptimizerService BudgetOptimizerService

<label for="total_budget">Total campaign budget:</label>
<input type="number" id="total_budget" @bind="totalBudget"><br>
<label for="agency_fee">Agency fee percentage:</label>
<input type="number" id="agency_fee" @bind="agencyFeePercentage"><br>
<label for="third_party_fee">Third-party tool fee percentage:</label>
<input type="number" id="third_party_fee" @bind="thirdPartyFeePercentage"><br>
<label for="hours">Fxied costs Agency hours:</label>
<input type="number" id="hours" @bind="fixedCostsAgencyHours"><br>
<label>Budget for other ads:</label><br>
<ul>
        @foreach (var budget in otherAdBudgets)
            {
                <li>
                    <!-- Input for editing the value -->
                    <input type="number" @bind="budget.Value" />
                    <input type="checkbox" id="with_third_party" @bind="budget.IsWithThirdParty" />
                    <label for="with_third_party">Is with third party</label>
                    <button @onclick="() => RemoveAdBudget(budget)">Remove</button>
                </li>
            }
</ul>
<button class="btn btn-primary" @onclick="AddAdBudget">+</button><br>
<input type="checkbox" id="with_third_party" @bind="isWithThirdParty" />
<label for="with_third_party">Is with third party</label><br>
<button class="btn btn-primary" @onclick="HandleButtonCalculate">Calculate</button>

@code {
    private float totalBudget;
    private float agencyFeePercentage;
    private float thirdPartyFeePercentage;
    private float fixedCostsAgencyHours;
    private bool isWithThirdParty;
    private List<AdBudget> otherAdBudgets = new();

    private void AddAdBudget() {
        otherAdBudgets.Add(new AdBudget(0, true));
        Console.WriteLine($"Added, Now {otherAdBudgets.Count}");
    } 

    private void RemoveAdBudget(AdBudget budget) {
        otherAdBudgets.Remove(budget);
    }

    private void HandleButtonCalculate()
    {
        BudgetOptimizerService.SetParameters(
            new BudgetOptimizerService.OptimizerParams
            {
                AgencyFeePercentage = agencyFeePercentage,
                ThirdPartyFeePercentage = thirdPartyFeePercentage,
                FixedCostsAgencyHours = fixedCostsAgencyHours,
                TotalBudget = totalBudget,
                OtherAdBudgets = otherAdBudgets,
                IsWithThirdParty = isWithThirdParty
            }
        );

        BudgetOptimizerService.Solve(4000, 0.01f, 100);

        // Print the results
        Console.WriteLine($"Optimized Budget for Specific Ad (X4): €{BudgetOptimizerService.Result:F2}");
        Console.WriteLine($"Total Ad Spend (X): €{BudgetOptimizerService.TotalAdSpend:F2}");
        Console.WriteLine($"Third-Party Ad Spend (X): €{BudgetOptimizerService.ThirdPartyAdSpend:F2}");
        Console.WriteLine($"Agency Fees: €{BudgetOptimizerService.AgencyFees:F2}");
        Console.WriteLine($"Third-Party Tool Fees: €{BudgetOptimizerService.ThirdPartyFees:F2}");
        Console.WriteLine($"Fixed Costs for Agency Hours: €{fixedCostsAgencyHours:F2}");
        Console.WriteLine($"Total Campaign Budget (Calculated): €{BudgetOptimizerService.CalculatedTotalBudget:F2}");
    }
}