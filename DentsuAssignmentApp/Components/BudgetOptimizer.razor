@rendermode InteractiveServer
@inject BudgetOptimizerService BudgetOptimizerService

<div class="container-fluid">
    <div class="d-flex flex-column align-items-center">
        <div class="optimizer-form">
            <div class="row">
                <label class="text-white" for="total_budget">Total campaign budget</label>
                <div class="input-group">
                    <input class="form-control" type="number" id="total_budget" @bind="totalBudget">
                    <div class="input-group-append"><span class="input-group-text">€</span></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label class="text-white" for="agency_fee">Agency fee percentage</label>
                    <div class="input-group">
                        <input class="form-control" type="number" id="agency_fee" @bind="agencyFeePercentage">
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="text-white" for="third_party_fee">Third-party tool fee percentage</label>
                    <div class="input-group">
                        <input class="form-control" type="number" id="third_party_fee" @bind="thirdPartyFeePercentage">
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="text-white" for="hours">Fxied costs Agency hours</label>
                    <div class="input-group">
                        <input class="form-control" type="number" id="hours" @bind="fixedCostsAgencyHours">
                    <div class="input-group-append"><span class="input-group-text">€</span></div>
                </div>
            </div>
            </div>
            <div class="row">
                <div class="d-flex justify-content-between">
                    <div class="text-white p-2">Budget for other ads</div>
                    <button class="btn btn-primary" @onclick="AddAdBudget">Add other ad budget</button>
                </div>
                <ul class="list-group">
                    @foreach (var budget in otherAdBudgets)
                        {
                            <li class="list-group-item d-flex justify-content-between">
                                <div class="input-group">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <input type="checkbox" id="with_third_party" @bind="budget.IsWithThirdParty" />
                                            <div class="third-party-title">Is with a third party tool?</div>
                                        </div>
                                    </div>
                                    <input type="number" @bind="budget.Value" />
                                    <div class="input-group-append"><span class="input-group-text">€</span></div>
                                </div>
                                <button class="btn-remove btn btn-secondary" @onclick="() => RemoveAdBudget(budget)">Remove</button>
                            </li>
                        }
                </ul>
            </div>
            <div class="row">
                <label class="text-white" for="initial_guess">Initial guess</label>
                <div class="input-group">
                    <input class="form-control" type="number" id="initial_guess" @bind="initialGuess">
                    <div class="input-group-append"><span class="input-group-text">€</span></div>
                </div>
            </div>
            <div class="row">
                <div class="d-flex">
                    <input type="checkbox" id="with_third_party" @bind="isWithThirdParty" />
                    <div class="third-party-title text-white" for="with_third_party">Is with a third party tool?</div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label class="text-white" for="tolerance">Tolerance</label>
                    <div class="input-group">
                        <input class="form-control" type="number" id="tolerance" @bind="tolerance">
                    </div>
                </div>
                <div class="col-md-6">
                    <label class="text-white" for="max_iteration">Max iteration</label>
                    <div class="input-group">
                        <input class="form-control" type="number" id="max_iteration" @bind="maxIteration">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <button class="btn btn-primary" @onclick="HandleButtonCalculate">Calculate</button>
                </div>
            </div>
        </div>
        @if (hasResult)
        {
            <div class="optimizer-result">
                <div class="row">
                    <div>Ad budget: @BudgetOptimizerService.Result</div>
                    <div>Total ad spend: @BudgetOptimizerService.TotalAdSpend</div>
                    <div>Agency fees: @BudgetOptimizerService.AgencyFees</div>
                    <div>Third party tool Fees: @BudgetOptimizerService.ThirdPartyFees</div>
                    <div>Fixed costs for agency hours: @BudgetOptimizerService.Params.FixedCostsAgencyHours</div>
                    <div>Total spend: @BudgetOptimizerService.CalculatedTotalSpend</div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private float totalBudget;
    private float agencyFeePercentage = 0.1f;
    private float thirdPartyFeePercentage = 0.05f;
    private float fixedCostsAgencyHours;
    private bool isWithThirdParty;
    private float initialGuess;
    private float tolerance = 0.01f;
    private int maxIteration = 100;
    private List<AdBudget> otherAdBudgets = new();
    private bool hasResult = false;

    private void AddAdBudget() {
        otherAdBudgets.Add(new AdBudget(0, true));
        Console.WriteLine($"Added, Now {otherAdBudgets.Count}");
    } 

    private void RemoveAdBudget(AdBudget budget) {
        otherAdBudgets.Remove(budget);
    }

    private void HandleButtonCalculate()
    {
        BudgetOptimizerService.SetParameters(
            new BudgetOptimizerService.OptimizerParams
            {
                AgencyFeePercentage = agencyFeePercentage,
                ThirdPartyFeePercentage = thirdPartyFeePercentage,
                FixedCostsAgencyHours = fixedCostsAgencyHours,
                TotalBudget = totalBudget,
                OtherAdBudgets = otherAdBudgets,
                IsWithThirdParty = isWithThirdParty
            }
        );

        BudgetOptimizerService.Solve(initialGuess, tolerance, maxIteration);

        // Print the results
        Console.WriteLine($"Optimized budget for specific ad (X4): €{BudgetOptimizerService.Result:F2}");
        Console.WriteLine($"Total ad spend (X): €{BudgetOptimizerService.TotalAdSpend:F2}");
        Console.WriteLine($"Third-party ad spend (X): €{BudgetOptimizerService.ThirdPartyAdSpend:F2}");
        Console.WriteLine($"Agency fees: €{BudgetOptimizerService.AgencyFees:F2}");
        Console.WriteLine($"Third-party tool fees: €{BudgetOptimizerService.ThirdPartyFees:F2}");
        Console.WriteLine($"Fixed costs for agency hours: €{fixedCostsAgencyHours:F2}");
        Console.WriteLine($"Total spend (calculated): €{BudgetOptimizerService.CalculatedTotalSpend:F2}");

        hasResult = true;
    }
}